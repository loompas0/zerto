{
  "id": "Zerto",
  "realm": "zerto",
  "displayName": "Zerto",
  "displayNameHtml": "<b>Zerto</b><br />Management",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 5,
  "roles": {
    "realm": [
      {
        "id": "f8cbafe8-6107-4684-b381-86fc0a6d3fb0",
        "name": "operator",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "60888f49-4ea5-41b8-8caf-d970c7d18ce5",
        "name": "admin",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "aa36f99a-775f-467c-bae5-6193e0340703",
        "name": "viewer",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "e367a3ac-ba8a-4352-b2d8-dfed39a2ba35",
        "name": "role-add-vpg",
        "description": "",
        "composite": true,
        "composites": {
          "realm": [
            "viewer"
          ],
          "client": {
            "zerto-client": [
              "ZertoPrivilege_ManageRemoteVpg",
              "ZertoPrivilege_ManageLocalVpg"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "4895340e-c4db-44b5-840d-c98225166f82",
        "name": "editor",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "de0e1e95-21e0-406e-bbef-3d9e601855a8",
        "name": "default-roles-zerto",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "domain": [
              "view-profile",
              "manage-account"
            ],
            "domain-admin": [
              "view-profile",
              "manage-account"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "7fc645f8-2f70-4fa1-a5a1-1257fac29cf1",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "cf9745a1-d1ac-4a1c-950a-30fa85d0b426",
        "name": "owner",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "d70ef83d-f58d-4292-a283-83e560bd312a",
        "name": "remy-role",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "33199959-fb32-460e-844d-b0fd68a0f604",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      }
    ],
    "client": {
      "api-script": [
        {
          "id": "449a893e-5f93-43a5-8cb2-f9dc28ecbafa",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "4641128c-72df-4665-b034-2a6a4f29dd62",
          "attributes": {}
        }
      ],
      "zerto-client": [
        {
          "id": "0f9fd71c-b8de-4ebb-b8f1-105b8ea2f80f",
          "name": "ZertoPrivilege_FileLevelRestoreDownload",
          "description": "Privilege - File Level Restore Download",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "3b569a8a-57fd-4892-a71b-c0a401ab854a",
          "name": "ZertoPrivilege_FileLevelRestoreToProduction",
          "description": "Privilege - File Level Restore To Production",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "97188874-806e-4498-840e-8cbeed83f043",
          "name": "ZertoPrivilege_TestFailover",
          "description": "Privilege - Test Failover",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "36877c04-2e16-4d2a-8ac3-9ead4554410b",
          "name": "ZertoRole_Admin",
          "description": "Role - Admin",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_FileLevelRestoreDownload",
                "ZertoPrivilege_ManageRemoteVpg",
                "ZertoPrivilege_FileLevelRestoreToProduction",
                "ZertoPrivilege_TestFailover",
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_ManageCloudConnector",
                "ZertoPrivilege_LiveFailoverMove",
                "ZertoPrivilege_ManageLocalVpg",
                "ZertoPrivilege_ManageSite",
                "ZertoPrivilege_ManageVRA"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "2236c963-cdec-4d9a-9d3b-48b5ace244e4",
          "name": "ZertoRole_FileLevelRestoreOperator",
          "description": "Role - File Level Restore Operator",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_FileLevelRestoreDownload",
                "ZertoPrivilege_FileLevelRestoreToProduction"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "55ae881c-8dbb-400a-b868-4d468e59c228",
          "name": "ZertoPrivilege_LiveFailoverMove",
          "description": "Privilege - Live Failover Move",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "561684bd-afc7-4980-bb7d-5b04fc6c1e01",
          "name": "ZertoPrivilege_ManageLocalVpg",
          "description": "Privilege - Manage Local Vpg",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "f15c21b8-834d-4900-9a65-1524a7e4da99",
          "name": "ZertoPrivilege_ManageSite",
          "description": "Privilege - Manage Site",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "4f0ad313-1569-4c76-b404-38fdbb800196",
          "name": "ZertoPrivilege_ManageRemoteVpg",
          "description": "Privilege - Manage Remote Vpg",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "6054b308-e04b-4830-95de-f2b9af70d98c",
          "name": "ZertoPrivilege_Viewer",
          "description": "Privilege - Viewer",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "e7ef5163-6b8e-4ac2-8d3e-a6d97f45a16f",
          "name": "ZertoRole_Viewer",
          "description": "Role - Viewer",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_Viewer"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "ff0b57a7-2020-42b9-b4b5-c3e85be42e38",
          "name": "ZertoRole_User",
          "description": "Role - User",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_ManageRemoteVpg",
                "ZertoPrivilege_TestFailover",
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_LiveFailoverMove",
                "ZertoPrivilege_ManageLocalVpg"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "5f841400-9e0e-4312-8660-399bf1c34931",
          "name": "ZertoPrivilege_ManageCloudConnector",
          "description": "Privilege - Manage Cloud Connector",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "9e68112d-f2d8-49ce-8596-4980b011ab1f",
          "name": "ZertoRole_Builder",
          "description": "Role - Builder",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_ManageRemoteVpg",
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_ManageLocalVpg"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "22ec1025-b2cc-4695-80a0-2bcb256b671b",
          "name": "ZertoPrivilege_ManageVRA",
          "description": "Privilege - Manage VRA",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "id": "711398c8-f4ef-4425-8bc5-f591db3d9953",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "b9ac2a45-3979-4c70-a6b2-1a5599bbba9f",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "79a3b305-4cbc-482d-9096-6d2e69760c4d",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a098aa94-4879-4d18-87c3-e62e72dada09",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "f0247644-f529-4eec-9a6f-181513752c40",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "32b21444-77b3-4c2c-b95e-f4137477c6db",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "b928c625-351b-45e1-859c-6057d3e6b3ba",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "5d5f0868-7ad3-4f0e-bed5-0a58aeac9242",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "view-authorization",
                "view-identity-providers",
                "impersonation",
                "view-users",
                "manage-identity-providers",
                "manage-realm",
                "view-clients",
                "view-events",
                "manage-events",
                "create-client",
                "view-realm",
                "manage-clients",
                "query-realms",
                "manage-users",
                "query-users",
                "query-clients",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "300d5ad0-7db5-4359-8f7a-48b382c6a5e6",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "0d8450a3-59e5-4871-b004-df4d7f0d7371",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "d3759e35-fcf7-405d-a8d4-47866b39bd73",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "2bb740fe-fdab-4f35-900b-dfda35024693",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a7dc0e6d-a5f0-421e-bcf0-a30b55a57bca",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "dc2e92f2-22d1-4ea1-af10-e3576a1fd587",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "dde9eace-78cd-4d60-ad3a-56983164b324",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "ab078b46-6e52-48be-8471-a219e352b2b3",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "05c44c9f-3967-4c3b-af0f-5dc4b5f8ebf4",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a7ca316e-fe25-4748-8952-2645f42a6d76",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "9e0f90e0-deed-4e7b-bde4-7a3bd2b8d177",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        }
      ],
      "zerto-cmdlets": [],
      "security-admin-console": [],
      "domain": [
        {
          "id": "d8958168-1e7d-41bc-a8be-b1a91d2eceba",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "0b979f8f-47c1-433d-9707-cfa4f5ed14ec",
          "attributes": {}
        },
        {
          "id": "8a38dfdf-5362-43ab-a371-a727b4e15bdf",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "0b979f8f-47c1-433d-9707-cfa4f5ed14ec",
          "attributes": {}
        }
      ],
      "remy-client": [
        {
          "id": "878874a9-6831-45e2-b7dd-4fe77a41c0a5",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "e6866f6b-c9fc-4edf-b6ec-d22f1fb8d048",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "16e679e7-1dd4-4fda-9991-3092688adff9",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "c2ebe347-cb43-463f-8e5b-b50c8fea56eb",
          "attributes": {}
        }
      ],
      "domain-admin": [
        {
          "id": "f6d3e87a-7ec3-4084-a1e9-1707509b3ce4",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "dfdf9c73-78c3-4917-8b20-1711117d804c",
          "attributes": {}
        },
        {
          "id": "97901f85-aa5d-40b0-be8b-1a76fb79f917",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "dfdf9c73-78c3-4917-8b20-1711117d804c",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "e29a8456-298d-441b-9c1a-384bfae6aa83",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "6a94d369-3ce5-4758-b4a6-1564032bc4b3",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "f24f32ea-0dd7-4c04-bb93-d2e9ca5bced3",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "a2f4380d-db08-4831-842a-12b968fdb848",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "c93625ae-3409-4329-8e65-f4e434aee431",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "546e8d3a-99a2-4144-92bf-8c3e9d813b94",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "222d8edd-6cf5-4d72-80bf-865e1c5a7aaa",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "1dc7c6a6-5952-44d4-9355-b1314ea2b0fe",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "3a03ff9f-0534-4f8e-9570-0406688df1fd",
      "name": "admins",
      "path": "/admins",
      "attributes": {},
      "realmRoles": [
        "admin",
        "viewer",
        "editor",
        "owner"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ]
      },
      "subGroups": []
    },
    {
      "id": "91220543-0779-4b46-bc16-02bb338a840d",
      "name": "editors",
      "path": "/editors",
      "attributes": {},
      "realmRoles": [
        "viewer",
        "editor"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "911f4160-cb8d-41c8-a5a1-70741b9a34ba",
      "name": "owners",
      "path": "/owners",
      "attributes": {},
      "realmRoles": [
        "viewer",
        "editor",
        "owner"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "d861ab5d-dfd9-4c52-8660-f1793bde4934",
      "name": "viewers",
      "path": "/viewers",
      "attributes": {},
      "realmRoles": [
        "viewer"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "id": "de0e1e95-21e0-406e-bbef-3d9e601855a8",
    "name": "default-roles-zerto",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "Zerto"
  },
  "defaultGroups": [
    "/viewers"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "5ebb3608-2077-48aa-982b-28dc700d73ad",
      "createdTimestamp": 1692374900261,
      "username": "service-account-api-script",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "api-script",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "clientRoles": {
        "api-script": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": [
        "/viewers"
      ]
    },
    {
      "id": "519c2e73-9dce-4ba4-9536-7a4924336c98",
      "createdTimestamp": 1691676591986,
      "username": "service-account-domain",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "domain",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "notBefore": 0,
      "groups": [
        "/viewers"
      ]
    },
    {
      "id": "21067a30-2cd7-4ddb-aa3c-5fbcb480b420",
      "createdTimestamp": 1691676605254,
      "username": "service-account-domain-admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "domain-admin",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "notBefore": 0,
      "groups": [
        "/admins",
        "/viewers"
      ]
    },
    {
      "id": "bf15db80-f3d3-4ebc-a54b-0f94bb2557b0",
      "createdTimestamp": 1692374626102,
      "username": "service-account-remy-client",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "remy-client",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "clientRoles": {
        "remy-client": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": [
        "/viewers"
      ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/zerto/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/zerto/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b762d2d2-56e7-4498-93b9-f67521e7483d",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Zerto/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/Zerto/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "be956014-6a2a-4fe3-b5b1-be8e4638ead3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b1fddb0e-ca6d-4c04-af59-f65a13f85797",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4641128c-72df-4665-b034-2a6a4f29dd62",
      "clientId": "api-script",
      "name": "api-script",
      "description": "This client is used for automation scripts",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1691679571",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "57fa383b-78e9-4417-88c6-a30445dcb489",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d84a90c-b486-4a99-b47a-3cc48fe1be59",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1272c8ce-0440-47ba-b0a1-286d8bc868cf",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:api-script:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "d8f6eea9-7bf0-4f38-a2ec-fa0c409b2f21",
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [
          {
            "id": "9bcb5a6c-fd77-46d1-b8e3-c6c87f5a906e",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "38972134-1137-4e50-8b80-383088e1c48b",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:api-script:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "c2ebe347-cb43-463f-8e5b-b50c8fea56eb",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0b979f8f-47c1-433d-9707-cfa4f5ed14ec",
      "clientId": "domain",
      "name": "domain",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-jwt",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1691676591",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "jwt.credential.certificate": "MIIEzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAV6ZXJ0bzAeFw0yMzA4MTAxNDA5NTBaFw0zMzA4MDcxNDA5NTBaMBAxDjAMBgNVBAMMBXplcnRvMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAiFNUsHsOgakhdQ4xQ1dmaQqS/x0CktnVQlgjqWgX7PIfRvzopfyIXtjaj0hIggXnkfZgVZk6DLexKQDOrryaKRBA1gFUHGfgzte7CuEXrfP3xkkW1b2G4/C8Kgspo3Cq2fvsKN3lbkcFRWzXACjLDIDFCurDJRdKwdXREjsZvADClJhdCf38HZH33tmI37f3VeWEsIUiw/I3ZVygWRKW5yoCNSflki3IzrjuLv8lMlsmWkgwbiKceEtp7RZW2woFM7xrTKYTuxUUvNiAKuOActuWLn91pJNOFny4aM9WFYTyFPOcVHdj6+5hiPLevwsfRcJ8cqn4WdtaEJyC+0C+tsc5S75MSy2b9qwwU5jf8x+ixAr/WudrQXMSW5OfjoRS1FO/KGuU3G5pjlCAaoa0lpwPGhZ5hBPptpjzNyIny9kBRmi8JAZU+JQUjaiZOyd4aCyB54aiv6MTHNd9RN4IAYORLW58ACpRqXcWOuJURhgIwnKJ9GyEKbkmIYyemLBqoUnG0/hgu4McB+WU6BBXsX9JwXVNBDxzDphelJ/J5MpDayl8bMqpVoZi6rsB3H7byxsCbO5nAfNsu+7yFvLO1OqqvNcOFNzbBEl2xWCtX7legdjF6cUyPhbMvxLPvn1E4myoUKPhXs+p8heY8SbmoGU2jJ5ZHeUBnr8GpgF/uRUCAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQULHwkYoRUbP9p3Vc9fWKVkKaGlzAwDQYJKoZIhvcNAQELBQADggIBACyljIjqUICkWsEEGCAzmEhEgKosjWC8lKsQXYdGvDqVvjqFOZdhduyopl79B4E2b3BsN3wsY2D9XS9tHuRXjg+5rygpoMzLTpgpPIe/zn8vjxFyz5UYKXE8/i2boaCME1YWp0XJbv0tnKwFnE1aLOW3j+3GOigSeMZVaiOaoaSd6Pzv18WpTaHRCWmSGBx85TFNiYHpiIqFiPmrJvIYSPClvzt7OtH+tj6m+SfM76r1hIOihuDmNUCDaxyy+7RaYl6KZ0G3MGeY7mitqN6Us3gdzoEKhCKo8q3VO4qq3ur1/+Y5AntBuIHMv3NwN5mRDZ8vz8mLketRNXcVBQ5GJZ7WraVDYtlpiZWIHWxb9ZNNUevubJcxgkQV5LP5U68VntInG43yMKdBYdwcjqdyI22rDsqkiOCT6MNwzur64u50wQc/1/e1QMMtxUj5z7ztkR46tg62tIjcpofs8/pIFdtS1UC6ryGA1DOhroMlbnhQjXbS6e5GTCV8I5VCFXVmUqdHATwlUNatWO7u2WdXGuZRY6Z2vAGNc9fCaMEiO6ZVVfDSlz5nwZbNNYn4olgH6wscAK7toGfo1C4jr/ntzz90IbFcv6kh2uBAUVyopLtaHmSG4bWTp2GjbynQqkz9dPfwzuic7WwxiPUE0d87BkysWe2qRFVdFwTYql05WFoE",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "a0d83385-e942-444d-9640-0a245fe9743c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "563e5184-6ed2-486f-b116-fe61decaa592",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08c5a603-67fc-4742-88e1-b7eb67bf468a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dfdf9c73-78c3-4917-8b20-1711117d804c",
      "clientId": "domain-admin",
      "name": "domain-admin",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-jwt",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1691676604",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "jwt.credential.certificate": "MIIEzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAV6ZXJ0bzAeFw0yMzA4MTAxNDEwMDRaFw0zMzA4MDcxNDEwMDRaMBAxDjAMBgNVBAMMBXplcnRvMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAnCrxoUduAga/yWgDcdp+7+iD0Ohj9ntmJc0PP75D1AOP7E1DwJN943/xVFezZpXBF8FrF54do8zcCy2mW1JZ78q3I8rjt/jnZOvfcDxDGHcrumwYkQ8uZaHxVpXD67qUn+vwmHF+hq2plQ0gsDlEthzdooUL0CHMjo63DepKLxH6xOd4UWcwGxXcj4fWb2B32ueqc4I65eJLg7CEBG5uuU+SpEDGTRC3rsWbCx+a2k4PBpfVknoX+eZtSVhT/72dRVbxfmBwYzXnP/eSm421LAIIjnpjRxtjRbfNzIKMoywrSbcIYQDNxz883Xe5lvH4RZZ9elKVs+6HjZnPYBx77itLe++V9Q92ZJhT6ZhlM38VIs5WEJ66d3eCNzDq3lEgX7juWFrvUZ12L7zB6QPictk9Ggcd77qXbD8AvPK3rISOiA0JWWZI94hnSh6Jcc3F0Eebauwt/lY0mYp2+KQ5cumg6+nFGgJBLqWo5Zhei1LpUW6p1kwqnR1R+4SZavUfKXf94BnyQuzHCOy8ilqAvvSRXOXbCMBh3BA+KqoaoYNFm6K1ViQArJL9KlHUD/5417fITDgl/aBbOMYJz2Rr6NhGs3NfRKo+ypvzGQVSXzB7OV5OOFPbDLQoxqz4kpgPkPv0I0u+UKXJ9XjtrdEuYX9xuTGH4AjxDTb0W6Ho7uUCAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUmTjp1QE0jbESy/fYBAKfvgUuWk8wDQYJKoZIhvcNAQELBQADggIBACsPnxD3t1oFBHV+uByekIEv2FOIvW4ZVSI7jMCe2NODkCFlw0WiwFPin3RHbZ3heNidpHiGV7C2hofc00/56E1tMRMJqPKYT6pIBgKJUFegZcZuLdVY+FxDtRp3NSmT4n491+6TkwW3o+klmTotfo/oc3yIXI9ZuokSLCfRV0pU4kOQFR8NUuBbzY2DaAlFBJuWoii+OycyOrrlpgJhWH+Rpp1qabq1763bZOB1CVDPEDe5/sjyssrCEVuSlEW2PAmeKQhXM0LzJynBBAFdsglKVgz0uGQw74ZQ7Fe9wtp61T++C8+JqieSoVwpLe4/SWkVd/YYE8FF5VL+aMsh+N1kwo3+vZtxUP+X3y3n8j15zP6/JaTv38Dcyt6K6VYdF0XvP6khfUzZjid7aSfnpVvyLhFHYlIksjHGxQ4xa4lOZufLWRJ65WU2in0mEXzE/3YTHGDdPzy4uqGBOoNkS8zqYlP9qs/c1LR8fI6x6Wrbla6VM5N4OxH+KTkRymTfVVSEL1u6vCFxQfchyX72ct5B/1v/ByTZ9bdhipj6hX8M8Lc0WOlo4n+ZXRDvt1LR0LHhY6kjBt2PBJaM8So/8uuaykYBhnlXAErLSPdvSipy/6r+0TKelDmEMjpM/IHk/NY8phPsvtBBvO83osdLNEXFIpLoWd3Yyq8403oeCGxE",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "38f7be70-a76d-4d88-bf33-af3d49fb1a79",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1e5950c0-a129-4751-b18a-cfd92ea6e954",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "72749818-51b7-4fb2-a4f1-eef99031fda7",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e6866f6b-c9fc-4edf-b6ec-d22f1fb8d048",
      "clientId": "remy-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "client.secret.creation.time": "1692374626",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "868f9cb8-2f9e-4c70-96ee-6de8c139bc73",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bd2b4b1a-b753-41ba-9692-1eb56c6c1b99",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35545366-909b-4d50-8a9a-c8689f2f1d75",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:remy-client:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "9f249af0-ea4b-4e5e-a69d-cf3fa65420a9",
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [
          {
            "id": "c3bb8da6-80c0-4036-988a-987ef2dcce75",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "652a2400-62f2-4256-81bb-c4766d1548ea",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:remy-client:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "dd00deba-32e5-4e79-9c73-a24d6afbcd53",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/zerto/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/zerto/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "30d797c5-afca-4bfb-a9db-d1e28b4427de",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d91350e4-70b8-4884-9c33-20551df45f46",
      "clientId": "zerto-client",
      "name": "Zerto client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e56c541c-b4b9-47a9-a620-d846a8d4331b",
          "name": "Login Method mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "aggregate.attrs": "false",
            "userinfo.token.claim": "true",
            "multivalued": "false",
            "user.attribute": "loginMethod",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "loginMethod",
            "jsonType.label": "String"
          }
        },
        {
          "id": "15a1b6f9-5903-42d8-8d44-6116ce0a5820",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "4485dc3c-285b-415c-b69d-d90399606f68",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a9c8aef7-15db-40f6-b218-dc7965b8f217",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "69c29268-e4a3-490e-b330-54ba5babc68d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b152d8bb-6cfb-4424-ba0f-bd7345e3d056",
      "clientId": "zerto-cmdlets",
      "name": "Zerto cmdlets",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "client.session.max.lifespan": "86400",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "b1922876-73de-4c6a-8a3d-a821beb5b1c9",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "84a39c9a-0037-4544-8e3d-8a23af1af229",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "853d76f6-311a-4845-9ddb-2d1afea08f9c",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aebb2740-aecb-4c04-8f7b-e8c2079edf4a",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "fd4b74ac-8970-47cc-a9f3-d2e4a30dbec3",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "66f8a55d-907b-485b-af6e-f14fcb393431",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f9963670-7125-4873-bed9-aab1bd9c3b89",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "bc7ae2af-a76f-4506-be73-190166079349",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c043ce43-e551-4270-bbe9-c98a0cbc45e8",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "ee6167eb-30d4-4ab6-b2ad-ceb7ac8f72e4",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "39cacb94-6b0e-4784-8fff-b264fbee3ef2",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "afd9bf18-6d9d-47ed-806b-28f8a28193f5",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "d32c1133-68fa-4f76-8ff6-a1e1f4ad029b",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2582e982-a618-4a14-a87b-147162aafb22",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "189055cd-dba0-41e3-ab65-e2ea3e7d155e",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b5aad83a-efa0-4412-8413-5380228be6f0",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5b0ab9c7-27b8-4417-aeb1-6d3b07a4f502",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b8d6b7c-cc6c-4432-bea0-b99dd2d69f54",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0e93d10e-6b23-4228-b15e-df96626dd258",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0be19988-3879-42f8-957f-08910f7f815b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ada219b-7d3c-4a02-b570-a7ae9471698f",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "85b28111-4501-48ef-b5b8-a12d1d6247b1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6a891f72-b010-4e76-bf91-d0fef01cb2fe",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3aa47e2c-56ae-4e22-86c2-0f616c90b890",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a54c5569-b87d-4494-8352-3475a9806459",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e460d9e2-54bf-43cb-9191-3285248feaf5",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "2da3c6d5-4501-49b2-ad84-ca97df860d49",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "de0abfcb-5157-45b0-ac7e-1d3af30f2ede",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "41166db8-2e30-4472-9d8b-c930779071d1",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "797e8dd6-daed-4bf5-b58d-8441c2de3538",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23411a41-b8a4-4f5f-8745-8c3c55852042",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "532ecbfa-34de-4a04-bd4d-f1164daa9b9e",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e23b6830-208d-47fc-bec3-efcfc3240425",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "73e4268c-a444-4809-829c-391dfc3f7147",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "81ab9ee5-c019-4e84-94a2-4e4d9684d6de",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "3e8330d3-dd5c-41f0-a079-81968d9370f6",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "2249e348-7f31-4874-bb94-bbd3e4b2e1d5",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "333a89ba-cc0a-485e-894d-27fc14bf8bcf",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c761e8f3-5f8f-491d-9da3-1014f0d254c5",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "fededdf6-85b9-454a-9c11-dd4330981e37",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5b4e7ca0-990f-446e-a42e-464acf78d1c9",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "web-origins",
    "roles",
    "role_list",
    "profile",
    "email",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "offline_access",
    "phone",
    "address"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "zerto",
  "accountTheme": "zerto",
  "adminTheme": "zerto",
  "emailTheme": "zerto",
  "eventsEnabled": true,
  "eventsExpiration": 43200,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "UPDATE_PROFILE_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "IDENTITY_PROVIDER_LOGIN",
    "TOKEN_EXCHANGE",
    "AUTHREQID_TO_TOKEN",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "DELETE_ACCOUNT",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "IDENTITY_PROVIDER_LOGIN_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "9e01af1f-47a1-405d-b667-f8af8a0cbbd9",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ebe7f7a0-84e1-4e6e-8b24-dc0c64cd5b91",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5296c0a5-9a7f-43fc-9cce-104c1a5c2bbf",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "6fd78ce6-fc9c-404d-822e-bc6613f34591",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "f748d0b1-b071-484d-b869-19b2542994d6",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "dee7a51d-d084-4b87-87f9-8395c5ea9b82",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "b0375cbe-d3c1-432d-8213-35dc7a8194b3",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "1b65e1be-54b9-436a-a58b-481c0bae00fc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "715f1f24-0d90-4a27-b442-2fd0337387ef",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "id": "4ec7e904-e536-448e-9095-88f4b82e091d",
        "name": "ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "id": "55f7cdbd-ab36-4a3f-9681-ef9fab241b80",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "id": "233d552e-fc56-4d9a-9c39-696d40cf0eae",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "id": "017bc5c3-b25c-4e52-982f-29ee5f63a36b",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "whenCreated"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            },
            {
              "id": "9f160de8-301f-4cc2-82f7-0be158bb93e7",
              "name": "MSAD account controls",
              "providerId": "msad-user-account-control-mapper",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "2c9f5af6-e1a1-4753-ba34-cf4e1bff5dcc",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "whenChanged"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "id": "d2a6c2ed-d560-454a-a016-7a083916d899",
              "name": "full name",
              "providerId": "full-name-ldap-mapper",
              "subComponents": {},
              "config": {
                "read.only": [
                  "true"
                ],
                "write.only": [
                  "false"
                ],
                "ldap.full.name.attribute": [
                  "cn"
                ]
              }
            },
            {
              "id": "89441912-50c0-4e2d-897f-d8049ce569a0",
              "name": "login method mapper",
              "providerId": "hardcoded-attribute-mapper",
              "subComponents": {},
              "config": {
                "attribute.value": [
                  "UserFederation"
                ],
                "user.model.attribute": [
                  "loginMethod"
                ]
              }
            },
            {
              "id": "260c5dd0-7da6-444f-9370-4a8b9253cc50",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sAMAccountName"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            }
          ]
        },
        "config": {
          "pagination": [
            "false"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "startTls": [
            "false"
          ],
          "usersDn": [
            "OU=Accounts,DC=hpedemo,DC=fr"
          ],
          "connectionPooling": [
            "false"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "importEnabled": [
            "false"
          ],
          "enabled": [
            "false"
          ],
          "usernameLDAPAttribute": [
            "sAMAccountName"
          ],
          "bindCredential": [
            "**********"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "bindDn": [
            "CN=ldapzerto,OU=Services,OU=Accounts,DC=hpedemo,DC=fr"
          ],
          "vendor": [
            "ad"
          ],
          "uuidLDAPAttribute": [
            "objectGUID"
          ],
          "allowKerberosAuthentication": [
            "false"
          ],
          "connectionUrl": [
            "LDAPS://yoda.hpedemo.fr:636"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ],
          "searchScope": [
            "2"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "usePasswordModifyExtendedOp": [
            "false"
          ],
          "trustEmail": [
            "false"
          ],
          "userObjectClasses": [
            "person, organizationalPerson, user"
          ],
          "rdnLDAPAttribute": [
            "cn"
          ],
          "editMode": [
            "READ_ONLY"
          ],
          "validatePasswordPolicy": [
            "false"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "82a9e6a4-bcfd-44a3-9ac7-3c23b7557ca5",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "ecd16ee3-6cc3-4577-adb3-0e3d4cbb8c12",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "1e7ca558-ffac-405a-849b-d40c143604ad",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "c25c6995-6308-4cb2-b0ca-633869bed7dc",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d801977a-f97e-4bd8-a196-f31218471883",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "241fa643-3417-4384-8fd9-33a64bd5e076",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "de7f7d52-0edb-4507-b2c8-c5cad0bbd3c7",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "69a20fad-07ea-4829-9a4f-63ca72fb5d0d",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3bd9e49d-fcb4-44dd-b5fd-b3b941fbe252",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5e02f8f7-3af7-43cc-adc7-1037179461fd",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a9ea0454-6e27-43f2-9ce4-3667ac2a4d27",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b47ee687-b3d9-42fe-a5b3-c1c6a88a1eb7",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1f9b60b-df68-4b52-af48-2dd664597f21",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b7036671-27b8-469b-b272-c74cc3bf3e16",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3e24392f-f8b9-44ae-a4dd-daffd4d8e969",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e8102e72-e9e0-4d35-b45a-dc4a1c9fc7ae",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "58a98427-41c1-4a92-860e-54cd92d3e810",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7b5f3c8d-6dc8-4fe8-ab18-d3b8f2aa042f",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1dcf2c3-d39d-418f-a6d8-cd481fec12d0",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f7584d20-aeec-44a3-b9ae-f4f363f1c5d5",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bfee703d-da39-483e-a11f-2f103a5b5ec7",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "439d4daa-47bb-4c3a-8680-d827022ef81f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "56094fc8-f05d-4e9c-93fe-b9c3b57340db",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "33a886a1-4a00-4344-a3d9-28077c810023",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "5f4e5ce3-edcc-48b5-8274-c8757fec1d59",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "adminEventsExpiration": "1800"
  },
  "keycloakVersion": "21.1.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}