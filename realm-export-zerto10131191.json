{
  "id": "Zerto",
  "realm": "zerto",
  "displayName": "Zerto",
  "displayNameHtml": "<b>Zerto</b><br />Management",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 5,
  "roles": {
    "realm": [
      {
        "id": "60888f49-4ea5-41b8-8caf-d970c7d18ce5",
        "name": "admin",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "aa36f99a-775f-467c-bae5-6193e0340703",
        "name": "viewer",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "4895340e-c4db-44b5-840d-c98225166f82",
        "name": "editor",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "de0e1e95-21e0-406e-bbef-3d9e601855a8",
        "name": "default-roles-zerto",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "domain": [
              "view-profile",
              "manage-account"
            ],
            "domain-admin": [
              "manage-account",
              "view-profile"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "4ddab8fd-047b-42ec-8d09-cfbf0ddfd765",
        "name": "remy-role",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "32e222c7-f218-45d8-92de-27f64a52ffc2",
        "name": "operator",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "7fc645f8-2f70-4fa1-a5a1-1257fac29cf1",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "6c9e8227-0eba-4399-b07f-2f5f2caacdda",
        "name": "role-add-vpg",
        "description": "",
        "composite": true,
        "composites": {
          "realm": [
            "viewer"
          ],
          "client": {
            "zerto-client": [
              "ZertoPrivilege_ManageLocalVpg",
              "ZertoPrivilege_ManageRemoteVpg"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "cf9745a1-d1ac-4a1c-950a-30fa85d0b426",
        "name": "owner",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "9782113d-c96a-4eb7-aa14-6f26adc3d859",
        "name": "test",
        "description": "role to test operator function",
        "composite": true,
        "composites": {
          "realm": [
            "owner",
            "viewer"
          ],
          "client": {
            "zerto-client": [
              "ZertoPrivilege_Viewer",
              "ZertoRole_FileLevelRestoreOperator",
              "ZertoPrivilege_FileLevelRestoreToProduction",
              "ZertoPrivilege_TestFailover",
              "ZertoPrivilege_LiveFailoverMove"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      },
      {
        "id": "33199959-fb32-460e-844d-b0fd68a0f604",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "Zerto",
        "attributes": {}
      }
    ],
    "client": {
      "api-script": [
        {
          "id": "b0908263-ccef-45a3-9e2b-31effe3a7a56",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "65848c07-ecc1-43ec-8692-bb6d4c9fa6f6",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "id": "711398c8-f4ef-4425-8bc5-f591db3d9953",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "b9ac2a45-3979-4c70-a6b2-1a5599bbba9f",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "79a3b305-4cbc-482d-9096-6d2e69760c4d",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a098aa94-4879-4d18-87c3-e62e72dada09",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "f0247644-f529-4eec-9a6f-181513752c40",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "32b21444-77b3-4c2c-b95e-f4137477c6db",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "b928c625-351b-45e1-859c-6057d3e6b3ba",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "5d5f0868-7ad3-4f0e-bed5-0a58aeac9242",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "view-authorization",
                "view-identity-providers",
                "impersonation",
                "view-users",
                "manage-identity-providers",
                "manage-realm",
                "view-clients",
                "view-events",
                "manage-events",
                "create-client",
                "view-realm",
                "manage-clients",
                "query-realms",
                "manage-users",
                "query-users",
                "query-clients",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "300d5ad0-7db5-4359-8f7a-48b382c6a5e6",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "0d8450a3-59e5-4871-b004-df4d7f0d7371",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "d3759e35-fcf7-405d-a8d4-47866b39bd73",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "2bb740fe-fdab-4f35-900b-dfda35024693",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a7dc0e6d-a5f0-421e-bcf0-a30b55a57bca",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "dc2e92f2-22d1-4ea1-af10-e3576a1fd587",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "dde9eace-78cd-4d60-ad3a-56983164b324",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "ab078b46-6e52-48be-8471-a219e352b2b3",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "05c44c9f-3967-4c3b-af0f-5dc4b5f8ebf4",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "a7ca316e-fe25-4748-8952-2645f42a6d76",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        },
        {
          "id": "9e0f90e0-deed-4e7b-bde4-7a3bd2b8d177",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
          "attributes": {}
        }
      ],
      "zerto-cmdlets": [],
      "security-admin-console": [],
      "account-console": [],
      "broker": [
        {
          "id": "16e679e7-1dd4-4fda-9991-3092688adff9",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "c2ebe347-cb43-463f-8e5b-b50c8fea56eb",
          "attributes": {}
        }
      ],
      "zerto-client": [
        {
          "id": "dc49ac38-464f-4cba-a9b9-6f442c7150dd",
          "name": "ZertoRole_FileLevelRestoreOperator",
          "description": "Role - File Level Restore Operator",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_FileLevelRestoreToProduction",
                "ZertoPrivilege_FileLevelRestoreDownload"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "afc2d765-aa97-4e63-85ab-7e87a4e9aae5",
          "name": "ZertoPrivilege_ManageSite",
          "description": "Privilege - Manage Site",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "07b6934d-70e2-4c51-881b-3b4be964ea43",
          "name": "ZertoPrivilege_FileLevelRestoreToProduction",
          "description": "Privilege - File Level Restore To Production",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "b14af8b2-7242-41db-b727-ea65e9987c7b",
          "name": "ZertoRole_Viewer",
          "description": "Role - Viewer",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_Viewer"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "7c4bec54-2675-48e0-851d-9c867c9fddde",
          "name": "ZertoPrivilege_ManageCloudConnector",
          "description": "Privilege - Manage Cloud Connector",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "ff4ea7ce-36f2-437c-b846-34a8889b24df",
          "name": "ZertoRole_Admin",
          "description": "Role - Admin",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_ManageSite",
                "ZertoPrivilege_FileLevelRestoreToProduction",
                "ZertoPrivilege_FileLevelRestoreDownload",
                "ZertoPrivilege_ManageLocalVpg",
                "ZertoPrivilege_ManageVRA",
                "ZertoPrivilege_ManageCloudConnector",
                "ZertoPrivilege_TestFailover",
                "ZertoPrivilege_ManageRemoteVpg",
                "ZertoPrivilege_LiveFailoverMove"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "074a7b3c-f85b-484d-8ed8-fa00106ad205",
          "name": "ZertoPrivilege_Viewer",
          "description": "Privilege - Viewer",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "b76d6e24-a36b-4962-8506-669c5d5192d2",
          "name": "ZertoRole_User",
          "description": "Role - User",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_ManageLocalVpg",
                "ZertoPrivilege_TestFailover",
                "ZertoPrivilege_ManageRemoteVpg",
                "ZertoPrivilege_LiveFailoverMove"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "378309fc-98a3-424d-8d2d-045a2727a1c8",
          "name": "ZertoPrivilege_FileLevelRestoreDownload",
          "description": "Privilege - File Level Restore Download",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "770f5575-d69e-467c-b4fb-8a4eda881e7b",
          "name": "ZertoPrivilege_ManageLocalVpg",
          "description": "Privilege - Manage Local Vpg",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "d807c440-ba5d-44cb-8a16-fbb336cd6a49",
          "name": "ZertoPrivilege_ManageVRA",
          "description": "Privilege - Manage VRA",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "05010819-7e39-4d09-9c14-ddf51116c40d",
          "name": "ZertoPrivilege_TestFailover",
          "description": "Privilege - Test Failover",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "79c0e90b-3987-4003-9ba1-39e29e6e3f61",
          "name": "ZertoPrivilege_ManageRemoteVpg",
          "description": "Privilege - Manage Remote Vpg",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "7100bef9-3fa1-4831-ae92-b80e3fb92c67",
          "name": "ZertoRole_Builder",
          "description": "Role - Builder",
          "composite": true,
          "composites": {
            "client": {
              "zerto-client": [
                "ZertoPrivilege_Viewer",
                "ZertoPrivilege_ManageLocalVpg",
                "ZertoPrivilege_ManageRemoteVpg"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        },
        {
          "id": "dbb38aff-c0ab-49b5-93f5-6f90654ff638",
          "name": "ZertoPrivilege_LiveFailoverMove",
          "description": "Privilege - Live Failover Move",
          "composite": false,
          "clientRole": true,
          "containerId": "d91350e4-70b8-4884-9c33-20551df45f46",
          "attributes": {}
        }
      ],
      "domain": [
        {
          "id": "95b5f6f6-e1ec-4985-a62e-17d58b9afadb",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "2bbadcb3-232e-4f84-bd3a-4046b6154ec5",
          "attributes": {}
        },
        {
          "id": "2d487c6e-184d-4e70-9139-a0a9c43eee29",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "2bbadcb3-232e-4f84-bd3a-4046b6154ec5",
          "attributes": {}
        }
      ],
      "remy-client": [],
      "script-api": [],
      "admin-cli": [],
      "domain-admin": [
        {
          "id": "8e367675-50e5-4f39-ad57-8a20db566f7b",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "8dd43db8-7608-4711-b25c-a2709cca52c9",
          "attributes": {}
        },
        {
          "id": "6831ee65-9288-4263-bf56-87bd09ea56c8",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "8dd43db8-7608-4711-b25c-a2709cca52c9",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "e29a8456-298d-441b-9c1a-384bfae6aa83",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "816cbf42-cfeb-4ce6-a1d0-491c2a7b83b2",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "6a94d369-3ce5-4758-b4a6-1564032bc4b3",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "f24f32ea-0dd7-4c04-bb93-d2e9ca5bced3",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "a2f4380d-db08-4831-842a-12b968fdb848",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "546e8d3a-99a2-4144-92bf-8c3e9d813b94",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "222d8edd-6cf5-4d72-80bf-865e1c5a7aaa",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        },
        {
          "id": "1dc7c6a6-5952-44d4-9355-b1314ea2b0fe",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "3a03ff9f-0534-4f8e-9570-0406688df1fd",
      "name": "admins",
      "path": "/admins",
      "attributes": {},
      "realmRoles": [
        "admin",
        "viewer",
        "editor",
        "owner"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ]
      },
      "subGroups": []
    },
    {
      "id": "91220543-0779-4b46-bc16-02bb338a840d",
      "name": "editors",
      "path": "/editors",
      "attributes": {},
      "realmRoles": [
        "viewer",
        "editor"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "1236d10d-6392-4287-91fc-5a9dea7f0594",
      "name": "group-operator",
      "path": "/group-operator",
      "attributes": {},
      "realmRoles": [
        "test"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "e023a6e1-a91b-42f1-b282-c7f07ef51980",
      "name": "group-vpg",
      "path": "/group-vpg",
      "attributes": {},
      "realmRoles": [
        "role-add-vpg"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "911f4160-cb8d-41c8-a5a1-70741b9a34ba",
      "name": "owners",
      "path": "/owners",
      "attributes": {},
      "realmRoles": [
        "viewer",
        "editor",
        "owner"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "b1a58b4a-a8e5-4a09-947c-a5ba56e16c68",
      "name": "remy-group",
      "path": "/remy-group",
      "attributes": {},
      "realmRoles": [
        "admin",
        "viewer",
        "editor",
        "default-roles-zerto",
        "offline_access",
        "owner",
        "uma_authorization"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "d861ab5d-dfd9-4c52-8660-f1793bde4934",
      "name": "viewers",
      "path": "/viewers",
      "attributes": {},
      "realmRoles": [
        "viewer"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "id": "de0e1e95-21e0-406e-bbef-3d9e601855a8",
    "name": "default-roles-zerto",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "Zerto"
  },
  "defaultGroups": [
    "/viewers"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppMicrosoftAuthenticatorName",
    "totpAppGoogleName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "788b9ee9-f4b8-4ca6-a224-9b9ed49fb2e6",
      "createdTimestamp": 1682497523085,
      "username": "service-account-api-script",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "api-script",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "clientRoles": {
        "api-script": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": [
        "/viewers"
      ]
    },
    {
      "id": "842aedf0-2c0a-4be7-94ad-399afde83c92",
      "createdTimestamp": 1665495219069,
      "username": "service-account-domain",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "domain",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "notBefore": 0,
      "groups": [
        "/viewers"
      ]
    },
    {
      "id": "6a2ed52c-7527-42ed-8234-500621559eb2",
      "createdTimestamp": 1689181890377,
      "username": "service-account-domain-admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "domain-admin",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zerto"
      ],
      "notBefore": 0,
      "groups": [
        "/admins",
        "/viewers"
      ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "bf7b8b6f-775c-4b09-97f2-dfbb00927eed",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/zerto/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/zerto/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b762d2d2-56e7-4498-93b9-f67521e7483d",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Zerto/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/Zerto/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "be956014-6a2a-4fe3-b5b1-be8e4638ead3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b1fddb0e-ca6d-4c04-af59-f65a13f85797",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "65848c07-ecc1-43ec-8692-bb6d4c9fa6f6",
      "clientId": "api-script",
      "name": "api-script",
      "description": "This client is used for automation scripts",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1682497523",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "a62d7abd-7583-41b2-bbd4-d7fdc1b641ee",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bd79db7e-aca1-4103-a084-c6edc521d0b9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "14f20b69-2ee9-4d05-bc11-422bd8152811",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:api-script:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "7b297333-aa33-41f6-9d41-3651cbef7fe0",
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [
          {
            "id": "bd6a4e66-3a8f-4179-9d9a-3c80b1c4f08d",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "f93f0cc7-9675-40ba-852b-69590039f31f",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:api-script:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "c2ebe347-cb43-463f-8e5b-b50c8fea56eb",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2bbadcb3-232e-4f84-bd3a-4046b6154ec5",
      "clientId": "domain",
      "name": "domain",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-jwt",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1665495218",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "jwt.credential.certificate": "MIIEzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAV6ZXJ0bzAeFw0yMjEwMTExMzMzMzhaFw0zMjEwMDgxMzMzMzhaMBAxDjAMBgNVBAMMBXplcnRvMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0ez+ds8MM/LB5S2axOYUv6Gn1qa8x+s1CeJYdNC3r960XEi4gVus+BnkySP8PXbC6BQTsFFocNot3QrP22Qng5dcAkJQxK3a3r1cj6oifFqOPGhFy81x0LrrpxUEjFr9iD0XQmBVNz1SywlfUz1ffVzeDSou5VrwGsWEBuNmKawYk6yoeCRijKbJM6GvEzEmSHW31LGb4p8OKdS5yKqWVc+l0KvsDVXCqtd2APG3vv7RsrgzOAk6kl8pQ8GvOe2AzNAZCN/3N6JxNF+bmpnfAtHnxrQTbDKqfSMgu5AiNUqC2ddYDw95x5WxiSIRcAD0QJyQEF60Lr+iLAQHtDkZdhSAX3AEaxmGYsbCZ/kuZFYMIdH7EDHPZ94aa/NkQPVPK3aGaP76MpPAc4Wv57ot3ICVdMss3tyCWI2qva+NQtMNnml562fAYuPc1Vpaaob8iGlvrZXFaOSYkaVHC2aY1ed4v9KzWiNG5QH82XvSCSOc8+LSRWcJifAenxrqy9AJcdqplSchLwU31zBZU2UyLw1miqn1M/T19cZUDFKbUBqW6XnwbmMMti7taQgkfoZ7h2fsp8RQg1zupmqyi7c9wwbqutV5fA/z0zUyMlcK1jdDiGPe0brLLB8PGoKWVvi6YpzJrEUx+1hjhSokVBJEdnvauHGJKoxA0q2TWVPPkpECAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxQjGmNuxglItyU7/2U3pBkC/NXkwDQYJKoZIhvcNAQELBQADggIBAHgp4yxd5drKrGhBWCmQDSOjVRugAk/mi8RJ4Hgn++PP59nBVf+B2QeG3JosX8ykbWF6Dres/WP9lViRJcL9FnVEZo+4wYYkqTQ+dGZf3sMmV311GcB6ze2PsuppErPtncmhPnfpA5DRoNkN20CAJiRskgemcVkNkM9/yLdRIzKCJoSOdljwrXHOantfVxfCIGLLcp5CpDnDEEzBCQ5F5+9ybeByAUZBGkKk6bA0KrauWypBVDAALUj0i9CNwQTXO0xE3IuRZzIb5JFpippizAJJm/gS5Z1LL3lyMhUmQ5YVC+7S+SpRHg8v2OOKrsS2yeB31pMKywrjEGjwM5FxgslD0Nris2LBPGbcIH/xBF+vFOsadHIvpfoPQOikjEID40CHnJlatspZdMpqjiLrxubcoLrSxN88S5PRVv7EzRycWBWqKlAYaJgihkWFA/D1XcwfSjigYoyiFq5f7xkf3e/CG9p+TGU+jKa+TDA327q3J9LiPt+sb3ch5AFszsVvKMHbUEWrnbyBYqkMhbUBg2TGVi0PfLZ/uW2c6ShM1nZCUyqsfTt3ffvFg7bDN5vMXEWZieI0J+G5dFjdSJtZMg3Z556b57j1WnYUUGc3nAMah/r8oqdmq/EuPsiX7VMFuASg19dmrMxo5avSEW4jVWneA9jz+uh5Vi9m6hL4emET",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "750c0566-4d45-4e94-b860-d0002c253af1",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bba53e91-b9f6-4742-aa8c-5993c3983e66",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "143e643f-d40f-434e-9142-8aae976312c4",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8dd43db8-7608-4711-b25c-a2709cca52c9",
      "clientId": "domain-admin",
      "name": "domain-admin",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-jwt",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1689181890",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "jwt.credential.certificate": "MIIEzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAV6ZXJ0bzAeFw0yMzA3MTIxNzExMjlaFw0zMzA3MDkxNzExMjlaMBAxDjAMBgNVBAMMBXplcnRvMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAkH5VS4LotvXjIxqs1aGlTjfKS6bP60B3/PAt4sa8LJgZlYdaqUrfyK2aLL/4A8kes7mz4DxMQtOm2lLKml2ZNDqho0O8qUOhq3GWHlGbdUs3xaXR8WkHwW4sO+L7f2RMwD2l4MHeWoSGYzYSv9ykAgGeZTcZxSIHhroulCYXKJo6X6ojYr0KEJ2dOhuzdBZhPtgu2jQuIvyl0hFu3FnLqFe/LLyyb2/UzH6jVSyKHjt7tYgyLBWkasYrePM8/XsCv2nIMLsUaR+FaLa8JHIq2cr2i0UBPm9jcsh/thLDzDW7nKys8pu5BHagVoje855T/uOh+edS7hh/q9mjneZdxtRSKDKUqm8fbErtZGM8z4INwcTjM2W3v0BZTt7pM7mDXBz1EWLkWB/LeVrame5B03eEB5j41MADC3z0Yuh4ZDL8xlIiH5NX/3o4iaqOvQrsMO7z/9DFKXPypGRKngAyG5C9Ai3GsrM3rTzYKzIlr7CY9e8eCWd2pvN2ztPKf9R8YKDo1InsV8gmu9EdqpOpzafZI4EsTcIW+9PZuox6akjZHyu+nZkWeTx4U69PQl30SZIjBxYIE0wijtxPPSgsIdxtxY6Bljxxy9fYzFa2qtYNNeXJ+wzx9jxftXSF757aBuBZ0w3CY0f6Kstm40mBE9OIHBcsS3NoTWw5XsI/Ir8CAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUamiL1gOv+Tvl2b3QxHJXgG5/tPkwDQYJKoZIhvcNAQELBQADggIBADDD8YNhnoyHezrSBen0I1gbTBZr70TBc6iESRt4FFMYhw6I4V+2+Ly+4ebfKxm4mLndX8dmAzj+ww/CaRgFMwand+pScuOD9lVZsH8QOBN0Uvrer5RzYFjacOB2+Li2Ru9m6tgtuzaDYBOh0A/NAXCwEBdxQk6DNlLd31Tnrd574xqFGt1ifOD81JcEN43uSbpsjlmcejC6eucNNWzB8nLrcv+eeVJ/PEdV/2RR6jmtIG9xjQWtTzNkBrkEyrtrdiCBWEC7pdHKaMh4pToLEdGYP4tUT/DXEp0zbFluADZC/S+Hf9CprUqNm9eVxq8UwX6/hRbOrOJXEuqc8X3p6HqVnPIz/0d41pG7Va16JNG2cZFyaNrbRJhyb5+MpF6U/2EN6f6EB1wHDk9aq3rhb8Q/fpAXrAU+GvWJ3+WdbIWo9PnpiAo8G9RkqczqkbtWXVAPAme27dYvKtBgp8a0Eqw1Pi166klZl1K96MTGDfi1Oe14odblgejNC5xCSLFLD9Us8m++6anKnxCHohsWnoKRrfOXp1WqbtcU6cbghhEU++EOCnkmgHwNWB7NMMHoramB2/QbMMNJNhva38UohKC3NH6DbDqBwoMASs56pyA/lm7oOQv6MPpbkKYXnvnAFTFaAAzFyr3toD5wcjGfxuH5wGDAD+e7Hf0BoSB2XItQ",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "53fa78fe-4c8a-4062-9cc4-f00a6c89fef4",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "31150d5f-f2af-4301-9773-28f2e8d3d8d6",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ed84455f-f91c-4fcc-8f5b-ef793a0a1806",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bf731be2-f23a-4c29-8d30-50d2d3ad165f",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bd82ac96-9d20-47c2-8ee7-7797207ce0a7",
      "clientId": "remy-client",
      "name": "remy-client",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1682601792",
        "backchannel.logout.session.required": "true",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0932e2ba-4192-4c37-8919-232baf153b70",
      "clientId": "script-api",
      "name": "",
      "description": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "client.secret.creation.time": "1682513829",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dd00deba-32e5-4e79-9c73-a24d6afbcd53",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/zerto/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/zerto/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "30d797c5-afca-4bfb-a9db-d1e28b4427de",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d91350e4-70b8-4884-9c33-20551df45f46",
      "clientId": "zerto-client",
      "name": "Zerto client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "15a1b6f9-5903-42d8-8d44-6116ce0a5820",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "4485dc3c-285b-415c-b69d-d90399606f68",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a9c8aef7-15db-40f6-b218-dc7965b8f217",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "69c29268-e4a3-490e-b330-54ba5babc68d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b152d8bb-6cfb-4424-ba0f-bd7345e3d056",
      "clientId": "zerto-cmdlets",
      "name": "Zerto cmdlets",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "client.session.max.lifespan": "86400",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "b1922876-73de-4c6a-8a3d-a821beb5b1c9",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "84a39c9a-0037-4544-8e3d-8a23af1af229",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "853d76f6-311a-4845-9ddb-2d1afea08f9c",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aebb2740-aecb-4c04-8f7b-e8c2079edf4a",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "fd4b74ac-8970-47cc-a9f3-d2e4a30dbec3",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "66f8a55d-907b-485b-af6e-f14fcb393431",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f9963670-7125-4873-bed9-aab1bd9c3b89",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "bc7ae2af-a76f-4506-be73-190166079349",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c043ce43-e551-4270-bbe9-c98a0cbc45e8",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "ee6167eb-30d4-4ab6-b2ad-ceb7ac8f72e4",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "39cacb94-6b0e-4784-8fff-b264fbee3ef2",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "afd9bf18-6d9d-47ed-806b-28f8a28193f5",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "d32c1133-68fa-4f76-8ff6-a1e1f4ad029b",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2582e982-a618-4a14-a87b-147162aafb22",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "189055cd-dba0-41e3-ab65-e2ea3e7d155e",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b5aad83a-efa0-4412-8413-5380228be6f0",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5b0ab9c7-27b8-4417-aeb1-6d3b07a4f502",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b8d6b7c-cc6c-4432-bea0-b99dd2d69f54",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0e93d10e-6b23-4228-b15e-df96626dd258",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0be19988-3879-42f8-957f-08910f7f815b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ada219b-7d3c-4a02-b570-a7ae9471698f",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "85b28111-4501-48ef-b5b8-a12d1d6247b1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6a891f72-b010-4e76-bf91-d0fef01cb2fe",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3aa47e2c-56ae-4e22-86c2-0f616c90b890",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a54c5569-b87d-4494-8352-3475a9806459",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e460d9e2-54bf-43cb-9191-3285248feaf5",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "2da3c6d5-4501-49b2-ad84-ca97df860d49",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "de0abfcb-5157-45b0-ac7e-1d3af30f2ede",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "41166db8-2e30-4472-9d8b-c930779071d1",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "797e8dd6-daed-4bf5-b58d-8441c2de3538",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23411a41-b8a4-4f5f-8745-8c3c55852042",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "532ecbfa-34de-4a04-bd4d-f1164daa9b9e",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e23b6830-208d-47fc-bec3-efcfc3240425",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "73e4268c-a444-4809-829c-391dfc3f7147",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "81ab9ee5-c019-4e84-94a2-4e4d9684d6de",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "63bfb362-c249-4fba-bf52-17cbe7b79ff2",
      "name": "remy-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      }
    },
    {
      "id": "333a89ba-cc0a-485e-894d-27fc14bf8bcf",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c761e8f3-5f8f-491d-9da3-1014f0d254c5",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "59d43f5a-3352-4db3-93d9-3f6f2f21580c",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "11133639-0f3f-4127-bddd-995e3ee57661",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "fededdf6-85b9-454a-9c11-dd4330981e37",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5b4e7ca0-990f-446e-a42e-464acf78d1c9",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "web-origins",
    "roles",
    "role_list",
    "profile",
    "email",
    "acr",
    "remy-scope"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "offline_access",
    "phone",
    "address"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "zerto",
  "accountTheme": "zerto",
  "adminTheme": "zerto",
  "emailTheme": "zerto",
  "eventsEnabled": true,
  "eventsExpiration": 43200,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "UPDATE_PROFILE_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "AUTHREQID_TO_TOKEN",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "DELETE_ACCOUNT",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "9e01af1f-47a1-405d-b667-f8af8a0cbbd9",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ebe7f7a0-84e1-4e6e-8b24-dc0c64cd5b91",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5296c0a5-9a7f-43fc-9cce-104c1a5c2bbf",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "6fd78ce6-fc9c-404d-822e-bc6613f34591",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "f748d0b1-b071-484d-b869-19b2542994d6",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "dee7a51d-d084-4b87-87f9-8395c5ea9b82",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "b0375cbe-d3c1-432d-8213-35dc7a8194b3",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "1b65e1be-54b9-436a-a58b-481c0bae00fc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "id": "7cb5a48f-529c-44ef-9b28-23609d7c84fa",
        "name": "ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "id": "85e397b3-7705-4223-bafc-2ef2089c8311",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sAMAccountName"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "id": "1246d69b-223e-4ad8-b74e-f5d80a49b987",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "id": "1d9de986-ec3b-49b4-af7c-c42dcb1d6029",
              "name": "full name",
              "providerId": "full-name-ldap-mapper",
              "subComponents": {},
              "config": {
                "read.only": [
                  "true"
                ],
                "write.only": [
                  "false"
                ],
                "ldap.full.name.attribute": [
                  "cn"
                ]
              }
            },
            {
              "id": "3f6d1c01-360e-4023-8800-6375e3621a51",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "id": "3e7437c3-0fcc-4f8f-981a-690d263df50d",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "whenChanged"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "id": "bea20d5f-fad2-409e-9b4f-d3a3bfc600b3",
              "name": "MSAD account controls",
              "providerId": "msad-user-account-control-mapper",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "c4dd0264-aad9-4fe5-ae1c-1795ef8a9e40",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "whenCreated"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            }
          ]
        },
        "config": {
          "pagination": [
            "false"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "startTls": [
            "false"
          ],
          "usersDn": [
            "OU=Accounts,DC=hpedemo,DC=fr"
          ],
          "connectionPooling": [
            "false"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "importEnabled": [
            "false"
          ],
          "enabled": [
            "false"
          ],
          "bindDn": [
            "CN=ldapzerto,OU=Services,OU=Accounts,DC=hpedemo,DC=fr"
          ],
          "usernameLDAPAttribute": [
            "sAMAccountName"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "bindCredential": [
            "**********"
          ],
          "vendor": [
            "ad"
          ],
          "uuidLDAPAttribute": [
            "objectGUID"
          ],
          "connectionUrl": [
            "LDAPS://10.10.20.2:636"
          ],
          "allowKerberosAuthentication": [
            "false"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ],
          "searchScope": [
            "2"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "usePasswordModifyExtendedOp": [
            "false"
          ],
          "trustEmail": [
            "false"
          ],
          "userObjectClasses": [
            "person, organizationalPerson, user"
          ],
          "rdnLDAPAttribute": [
            "cn"
          ],
          "editMode": [
            "READ_ONLY"
          ],
          "validatePasswordPolicy": [
            "false"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "bf0cb687-f2df-486e-ac15-9c084e994363",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "active": [
            "true"
          ],
          "priority": [
            "100"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "id": "02a996c9-904e-4b62-8fd6-2f4ef5389091",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "keySize": [
            "2048"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "100"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "id": "9413d42d-e8e9-4ea6-b537-b73f95c4b274",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "active": [
            "true"
          ],
          "priority": [
            "100"
          ],
          "enabled": [
            "true"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "c835c7e1-0ea2-43af-a11e-60315f1e0856",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "43e8ceab-fa0a-4f0c-b66c-7e0b4a3bdaeb",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c41a10c0-b1b3-4e6f-956f-e9158221682d",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "52fd0d36-67a3-4b43-a5ac-99d2cb0f1459",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1c66e9c2-c7b0-418e-a6c8-f69ab0413b29",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b6c9754a-8331-42aa-a308-c294d8e1635e",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "49176aef-4aa2-4e8f-ab07-686fb2617837",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d928c802-8c33-46dd-bc6e-72c640306b25",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "000d5240-d3a2-413a-8b59-d31ccbaaa3c6",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "45a12466-7d8c-4bb6-8b4f-b39727bc9af0",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "10f21b9f-4db3-4018-b8fc-85b2a56fe4a9",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "100708f1-0456-4463-a217-8a7f06807347",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5f0bc210-7ec4-4701-a711-e666263216b4",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a9549fae-1c46-4098-9022-07597e48c040",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2912e918-e644-4ac2-8861-11e9f3d3067b",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6b5f163e-afc6-47ad-8a3a-6bea419c021d",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5c227087-bb4d-42f2-bba6-075ff7fca217",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4076d033-5a15-4165-b0cc-acaa5a1634ef",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "adb6f963-1d33-4be4-a705-23751e38ed83",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ff654894-c1a3-4726-9f6d-6394ad4b8641",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d778984b-dc34-45ba-b932-07d0412fd30f",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "04ecc0c6-83c7-4747-8900-095c0000d8b8",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "21.1.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}